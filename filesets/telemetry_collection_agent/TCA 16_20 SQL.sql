--6/25/2020 Teradata Telemetry Collection Agent Customer SQL

--
-- Profile: dbc_customer_level1. Database Version: 1620. Template: dbc_permspace.
--
locking row for access
select
current_timestamp as thetimestamp
,count(distinct vproc) as distinct_count_vproc
,count(distinct databasename) as distinct_count_databasename
,sum(maxperm) as sum_maxperm
,sum(maxspool) as sum_maxspool
,sum(maxtemp) as sum_maxtemp
,sum(currentperm) as sum_currentperm
,sum(currentspool) as sum_currentspool
,sum(currenttemp) as sum_currenttemp
,sum(allocatedperm) as sum_allocatedperm
,sum(allocatedspool) as sum_allocatedspool
,sum(allocatedtemp) as sum_allocatedtemp
from dbc.diskspacev;

-- Profile: dbc_customer_level1. Database Version: 1620. Template: dbc_databasecount.
locking row for access
select
current_timestamp as thetimestamp
,dbkind
,count(*) as database_count
from dbc.databasesv
group by 1,2;

-- Profile: dbc_customer_level1. Database Version: 1620. Template: dbc_tablecount.
locking row for access
select
current_timestamp as thetimestamp
,tablekind
,count(*) as table_count
from dbc.tablesv
group by 1,2;
--
--Profile: dbc_customer_level1. Database Version: 1620. Template: dbc_logonoffcount.
locking row for access
select
logdate
,cast(logtime/10000 as int) as loghour
,event
,count(distinct username) as distinct_username_cnt
,count(distinct sessionno) as distinct_sessionno_cnt
from dbc.logonoffv
where cast((logdate (format 'Y4-MM-DDB'))||(logtime (format '99:99:99.99')) as timestamp(2))
      >= cast(cast(timestamp '2020-07-01 00:00:00' as date) as timestamp(0)) +
         cast(extract(hour from timestamp '2020-07-01 00:00:00') as interval hour)
  and cast((logdate (format 'Y4-MM-DDB'))||(logtime (format '99:99:99.99')) as timestamp(2)) <= cast(cast(timestamp '2020-07-01 11:59:59' as date) as timestamp(0))
                                                                                                 + cast(extract(hour from timestamp '2020-07-01 11:59:59') as interval hour)
  and logdate between timestamp '2020-07-01 00:00:00' and timestamp '2020-07-01 11:59:59'
group by logdate, loghour, event;

--
--Profile: dbc_customer_level1. Database Version: 1620. Template: dbc_resusagesawt.
locking row for access
SELECT THEDATE,
NODEID,
THETIME,
GMTTIME,
CABINETID,
MODULEID,
NODETYPE,
THETIMESTAMP,
CENTISECS,
SECS,
NOMINALSECS,
SUMMARYFLAG,
RESERVED,
PM_COD_CPU,
WM_COD_CPU,
VPRID,
SPARE00,
SPARE01,
SPARE02,
SPARE03,
SPARE04,
SPARE05,
SPARE06,
SPARE07,
SPARE08,
SPARE09,
SPARE10,
SPARE11,
SPARE12,
SPARE13,
SPARE14,
SPARE15,
SPARE16,
SPARE17,
SPARE18,
SPARE19,
ACTIVE,
MAILBOXDEPTH,
FLOWCONTROLLED,
FLOWCTLCNT,
FLOWCTLTIME,
INUSEMAX,
AVAILABLE,
AVAILABLEMIN,
AWTSCONFIGURED,
WORKTYPEINUSE00,
WORKTYPEINUSE01,
WORKTYPEINUSE02,
WORKTYPEINUSE03,
WORKTYPEINUSE04,
WORKTYPEINUSE05,
WORKTYPEINUSE06,
WORKTYPEINUSE07,
WORKTYPEINUSE08,
WORKTYPEINUSE09,
WORKTYPEINUSE10,
WORKTYPEINUSE11,
WORKTYPEINUSE12,
WORKTYPEINUSE13,
WORKTYPEINUSE14,
WORKTYPEINUSE15,
WORKTYPEMAX00,
WORKTYPEMAX01,
WORKTYPEMAX02,
WORKTYPEMAX03,
WORKTYPEMAX04,
WORKTYPEMAX05,
WORKTYPEMAX06,
WORKTYPEMAX07,
WORKTYPEMAX08,
WORKTYPEMAX09,
WORKTYPEMAX10,
WORKTYPEMAX11,
WORKTYPEMAX12,
WORKTYPEMAX13,
WORKTYPEMAX14,
WORKTYPEMAX15,
UNRESERVEDAWTPOOLSIZE,
AVAILABLEFORWORK00,
AVAILABLEFORWORK08,
AVAILABLEFORWORK00MIN,
AVAILABLEFORWORK08MIN,
SPACEREACTIVECNT,
SPACEREACTIVEWAITTIME,
WORKTYPEAWTEXHAUSTED00,
WORKTYPEAWTEXHAUSTED01,
WORKTYPEAWTEXHAUSTED02,
WORKTYPEAWTEXHAUSTED03,
WORKTYPEAWTEXHAUSTED04,
WORKTYPEAWTEXHAUSTED05,
WORKTYPEAWTEXHAUSTED06,
WORKTYPEAWTEXHAUSTED07,
WORKTYPEAWTEXHAUSTED08,
WORKTYPEAWTEXHAUSTED09,
WORKTYPEAWTEXHAUSTED10,
WORKTYPEAWTEXHAUSTED11,
WORKTYPEAWTEXHAUSTED12,
WORKTYPEAWTEXHAUSTED13,
WORKTYPEAWTEXHAUSTED14,
WORKTYPEAWTEXHAUSTED15,
SPAREINT
FROM dbc.resusagesawt
where cast((thedate (format 'Y4-MM-DDB'))||(thetime (format '99:99:99.99')) as timestamp(2)) >= timestamp '2020-07-01 00:00:00'
  and cast((thedate(format 'Y4-MM-DDB'))||(thetime(format '99:99:99.99')) as timestamp(2)) < timestamp '2020-07-01 11:59:59'
  and thedate between timestamp '2020-07-01 00:00:00' and timestamp '2020-07-01 11:59:59'
;

-- Profile: dbc_customer_level1. Database Version: 1620. Template: dbc_resusagescpu.
locking row for access
SELECT THEDATE,
NODEID,
THETIME,
GMTTIME,
CABINETID,
MODULEID,
NODETYPE,
THETIMESTAMP,
CENTISECS,
SECS,
NOMINALSECS,
SUMMARYFLAG,
RESERVED,
PM_COD_CPU,
WM_COD_CPU,
CPUID,
CPUFREQUENCYMHZ,
SPARE00,
SPARE01,
SPARE02,
SPARE03,
SPARE04,
ACTIVE,
CPUIDLE,
CPUIOWAIT,
CPUUSERV,
CPUUEXEC,
SPAREINT
FROM dbc.resusagescpu
where cast((thedate (format 'Y4-MM-DDB'))||(thetime (format '99:99:99.99')) as timestamp(2)) >= timestamp '2020-07-01 00:00:00'
  and cast((thedate(format 'Y4-MM-DDB'))||(thetime(format '99:99:99.99')) as timestamp(2)) < timestamp '2020-07-01 11:59:59'
  and thedate between timestamp '2020-07-01 00:00:00' and timestamp '2020-07-01 11:59:59'
;

-- Profile: dbc_customer_level1. Database Version: 1620. Template: dbc_resusageshst.
locking row for access
SELECT THEDATE,
NODEID,
THETIME,
GMTTIME,
CABINETID,
MODULEID,
NODETYPE,
THETIMESTAMP,
CENTISECS,
SECS,
NOMINALSECS,
SUMMARYFLAG,
RESERVED,
PM_COD_CPU,
WM_COD_CPU,
IPADDR0,
IPADDR1,
HSTTYPE,
VPRID,
RESERVED2,
HSTID,
HOSTREADKB,
HOSTWRITEKB,
SPARE00,
SPARE01,
SPARE02,
SPARE03,
SPARE04,
SPARE05,
SPARE06,
SPARE07,
SPARE08,
SPARE09,
ACTIVE,
HOSTBLOCKREADS,
HOSTBLOCKWRITES,
HOSTMESSAGEREADS,
HOSTMESSAGEWRITES,
HOSTREADFAILS,
HOSTWRITEFAILS,
CMDTRANSACTIONS,
CMDREQUESTS,
CMDALTERSTMTS,
CMDCREATESTMTS,
CMDDELETESTMTS,
CMDGRANTSTMTS,
CMDINSERTSTMTS,
CMDSELECTSTMTS,
CMDUPDATESTMTS,
CMDARCHUTILITYSTMTS,
CMDLOADUTILITYSTMTS,
CMDOTHERSTMTS,
CMDSTMTSUCCESSES,
CMDSTMTFAILURES,
CMDSTMTERRORS,
SPAREINT
FROM dbc.resusageshst
where cast((thedate (format 'Y4-MM-DDB'))||(thetime (format '99:99:99.99')) as timestamp(2)) >= timestamp '2020-07-01 00:00:00'
  and cast((thedate(format 'Y4-MM-DDB'))||(thetime(format '99:99:99.99')) as timestamp(2)) < timestamp '2020-07-01 11:59:59'
  and thedate between timestamp '2020-07-01 00:00:00' and timestamp '2020-07-01 11:59:59'
;

-- Profile: dbc_customer_level1. Database Version: 1620. Template: dbc_resusagesldv.
locking row for access
SELECT THEDATE,
NODEID,
THETIME,
GMTTIME,
CABINETID,
MODULEID,
NODETYPE,
THETIMESTAMP,
CENTISECS,
SECS,
NOMINALSECS,
SUMMARYFLAG,
RESERVED0,
RESERVED1,
PM_COD_CPU,
PM_COD_IO,
WM_COD_CPU,
WM_COD_IO,
TIER_FACTOR,
CTLID,
LDVID,
LDVTYPE,
LDVKIND,
MAJOR,
MINOR,
RESERVED2,
LDVOUTREQSUM,
LDVREADKB,
LDVWRITEKB,
LDVREADRESPTOT,
LDVWRITERESPTOT,
FULLPOTENTIALIOTA,
CODPOTENTIALIOTA,
USEDIOTA,
SPARE00,
SPARE01,
SPARE02,
SPARE03,
SPARE04,
SPARE05,
SPARE06,
SPARE07,
SPARE08,
SPARE09,
ACTIVE,
LDVOUTREQDIV,
LDVREADS,
LDVWRITES,
LDVOUTREQTIME,
SPAREINT
FROM dbc.resusagesldv
where cast((thedate (format 'Y4-MM-DDB'))||(thetime (format '99:99:99.99')) as timestamp(2)) >= timestamp '2020-07-01 00:00:00'
  and cast((thedate(format 'Y4-MM-DDB'))||(thetime(format '99:99:99.99')) as timestamp(2)) < timestamp '2020-07-01 11:59:59'
and thedate between timestamp '2020-07-01 00:00:00' and timestamp '2020-07-01 11:59:59'
;

-- Profile: dbc_customer_level1. Database Version: 1620. Template: dbc_resusagespdsk.
locking row for access
SELECT THEDATE,
NODEID,
THETIME,
GMTTIME,
NODETYPE,
CABINETID,
MODULEID,
THETIMESTAMP,
CENTISECS,
SECS,
NOMINALSECS,
SUMMARYFLAG,
RESERVED,
PM_COD_CPU,
PM_COD_IO,
WM_COD_CPU,
WM_COD_IO,
TIER_FACTOR,
PDISKGLOBALID,
PDISKDEVICEID,
PDISKTYPE,
RESERVED0,
READKB,
WRITEKB,
READRESPTOT,
WRITERESPTOT,
READRESPSQ,
WRITERESPSQ,
EXTMIGRATEREADRESPTOT,
EXTMIGRATEWRITERESPTOT,
EXTMIGRATEIOTIMEIMPROVE,
DISKCACHEREADCNT,
DISKCACHEWRITECNT,
DISKCACHEREADHITCNT,
DISKCACHEWRITEHITCNT,
DISKCACHEFILLCNT,
DISKCACHEINUSEKB,
DISKCACHETOTALKB,
SPARE00,
SPARE01,
SPARE02,
SPARE03,
SPARE04,
SPARE05,
SPARE06,
SPARE07,
SPARE08,
SPARE09,
SPARE10,
SPARE11,
SPARE12,
SPARE13,
SPARE14,
SPARE15,
SPARE16,
SPARE17,
SPARE18,
SPARE19,
ACTIVE,
READCNT,
WRITECNT,
READRESPMAX,
WRITERESPMAX,
CONCURRENTMAX,
CONCURRENTREADMAX,
CONCURRENTWRITEMAX,
MIGRATIONBLOCKEDIOS,
EXTALLOCHOT,
EXTALLOCWARM,
EXTALLOCTOTAL,
EXTALLOCNONPACING,
EXTALLOCSYSTEMPACING,
EXTALLOCSTATIC,
EXTMIGRATEFASTER,
EXTMIGRATETOTAL,
EXTMIGRATEIOTIMECOST,
EXTMIGRATEIOTIMEBENEFIT,
SPAREINT
FROM dbc.resusagespdsk
where cast((thedate (format 'Y4-MM-DDB'))||(thetime (format '99:99:99.99')) as timestamp(2)) >= timestamp '2020-07-01 00:00:00'
  and cast((thedate(format 'Y4-MM-DDB'))||(thetime(format '99:99:99.99')) as timestamp(2)) < timestamp '2020-07-01 11:59:59'
  and thedate between timestamp '2020-07-01 00:00:00' and timestamp '2020-07-01 11:59:59'
;

-- Profile: dbc_customer_level1. Database Version: 1620. Template: dbc_resusagespma.
locking row for access
SELECT THEDATE,
NODEID,
THETIME,
GMTTIME,
CABINETID,
MODULEID,
NODETYPE,
THETIMESTAMP,
CENTISECS,
SECS,
NOMINALSECS,
PM_COD_CPU,
PM_COD_IO,
WM_COD_CPU,
WM_COD_IO,
TIER_FACTOR,
RESERVED0,
RESERVED1,
NCPUS,
VPROC1,
VPROC2,
VPROC3,
VPROC4,
VPROC5,
VPROC6,
VPROC7,
VPROCTYPE1,
VPROCTYPE2,
VPROCTYPE3,
VPROCTYPE4,
VPROCTYPE5,
VPROCTYPE6,
VPROCTYPE7,
NODENORMFACTOR,
MEMSIZE,
RESERVED2,
PROCPENDMISC,
PROCBLKSTIME,
PROCWAITMSGREAD,
PROCWAITTIME,
PROCWAITMISC,
MEMFREEKB,
MSGPTPREADKB,
MSGPTPWRITEKB,
MSGBRDREADKB,
MSGBRDWRITEKB,
NETMSGPTPWRITEKB,
NETMSGBRDWRITEKB,
NETMSGPTPREADKB,
NETMSGBRDREADKB,
NETRXKBPTP,
NETTXKBPTP,
NETRXKBBRD,
NETTXKBBRD,
NETMRGTXKB,
NETMRGRXKB,
NETMRGTXROWS,
NETMRGRXROWS,
HOSTREADKB,
HOSTWRITEKB,
FILEACQKB,
FILEACQOTHERKB,
FILEACQREADKB,
FILERELKB,
FILERELOTHERKB,
FILEWRITEKB,
FILEPREKB,
FILEPREREADKB,
FILECONTIGWIOS,
FILECONTIGWBLOCKS,
FILECONTIGWKB,
PSQWAITTIME,
PSSERVICETIME,
TVSREADCNT,
TVSWRITECNT,
TVSREADRESPTOT,
TVSWRITERESPTOT,
FULLPOTENTIALIOTA,
CODPOTENTIALIOTA,
USEDIOTA,
CPUTHROTTLECOUNT,
CPUTHROTTLETIME,
VHCACHEKB,
NLBMSGFLOWCONTROLLEDKB,
NETACTIVEMRGKB,
KERNMEMINUSEKB,
SEGMDLINUSEKB,
FSGCACHEKB,
PAGESCANDIRECTS,
PAGESCANKSWAPDS,
PAGEMAJORFAULTS,
PAGEMINORFAULTS,
SLABCACHEKB,
DISKCACHEINUSEKB,
DISKCACHETOTALKB,
SPARE00,
SPARE01,
SPARE02,
SPARE03,
SPARE04,
SPARE05,
SPARE06,
SPARE07,
SPARE08,
SPARE09,
SPARE10,
SPARE11,
SPARE12,
SPARE13,
SPARE14,
SPARE15,
SPARE16,
SPARE17,
SPARE18,
SPARE19,
ACTIVE,
PROCREADYMAX,
PROCREADY,
PROCBLOCKED,
PROCPENDMEMALLOC,
PROCPENDFSGREAD,
PROCPENDFSGWRITE,
PROCPENDNETTHROTTLE,
PROCPENDNETREAD,
PROCPENDMONITOR,
PROCPENDMONRESUME,
PROCPENDDBLOCK,
PROCPENDSEGLOCK,
PROCPENDFSGLOCK,
PROCPENDQNL,
PROCBLKSMEMALLOC,
PROCBLKSFSGREAD,
PROCBLKSFSGWRITE,
NETSEMINUSE,
NETCHANINUSE,
NETGROUPINUSE,
PROCBLKSNETTHROTTLE,
PROCBLKSMSGREAD,
PROCBLKSMONITOR,
PROCBLKSMONRESUME,
PROCBLKSDBLOCK,
PROCBLKSSEGLOCK,
PROCBLKSMISC,
PROCBLKSFSGLOCK,
PROCBLKSQNL,
PROCWAITMEMALLOC,
PROCWAITPAGEREAD,
PROCWAITFSGREAD,
PROCWAITFSGWRITE,
PROCWAITNETTHROTTLE,
PROCWAITMONITOR,
PROCWAITMONRESUME,
PROCWAITDBLOCK,
PROCWAITSEGLOCK,
PROCWAITFSGLOCK,
PROCWAITQNL,
CPUIDLE,
CPUIOWAIT,
CPUUSERV,
CPUUEXEC,
CPUPROCSWITCHES,
MEMVPRALLOCKB,
MEMTEXTPAGEREADS,
MEMCTXTPAGEWRITES,
MEMCTXTPAGEREADS,
MSGPTPREADS,
MSGPTPWRITES,
MSGBRDREADS,
MSGBRDWRITES,
NETTXROUTING,
NETTXCONNECTED,
NETRXCONNECTED,
NETTXIDLE,
NETRXIDLE,
NETSAMPLES,
NETMSGPTPWRITES,
NETMSGBRDWRITES,
NETMSGPTPREADS,
NETMSGBRDREADS,
NETMRGBLOCK,
NETMSGCHANNELBLOCK,
NETMSGGROUPBLOCK,
NETMSGRESOURCEBLOCK,
NETMSGFCBLOCK,
NETMSGRXBLOCK,
NETBLOCKQUEUETOTAL,
NETBLOCKQUEUEMAX,
NETBLOCKQUEUE,
NETTXCIRCHPBRD,
NETRXCIRCPTP,
NETTXCIRCHPPTP,
NETRXCIRCBRD,
NETTXCIRCBRD,
NETBACKOFFS,
NETSEMINUSEMAX,
NETCHANINUSEMAX,
NETGROUPINUSEMAX,
NETHWBACKOFFS,
NETTXCIRCPTP,
HOSTBLOCKREADS,
HOSTBLOCKWRITES,
HOSTMESSAGEREADS,
HOSTMESSAGEWRITES,
DBLOCKBLOCKS,
DBLOCKDEADLOCKS,
FILEACQS,
FILEACQSOTHER,
FILEACQREADS,
FILERELS,
FILERELSOTHER,
FILEWRITES,
FILEPRES,
FILEPREREADS,
FILELOCKBLOCKS,
FILELOCKDEADLOCKS,
FILELOCKENTERS,
FILESMALLDEPOTWRITES,
FILELARGEDEPOTWRITES,
FILELARGEDEPOTBLOCKS,
MSGCHNLASTDONE,
CMDDDLSTMTS,
CMDDELETESTMTS,
CMDINSERTSTMTS,
CMDSELECTSTMTS,
CMDUPDATESTMTS,
CMDUTILITYSTMTS,
CMDOTHERSTMTS,
CMDSTMTSUCCESSES,
CMDSTMTFAILURES,
CMDSTMTERRORS,
AMPSFLOWCONTROLLED,
FLOWCTLCNT,
AWTINUSE,
AWTINUSEMAX,
PSNUMREQUESTS,
TVSREADRESPMAX,
TVSWRITERESPMAX,
NLBACTIVESESSIONSMAX,
NLBSESSIONSINUSE,
NLBSESSIONSCOMPLETED,
NLBMSGFLOWCONTROLLED,
NETACTIVEMRG,
NETMRGCOMPLETED,
FILESMALLDEPOTBUSY,
FILELARGEDEPOTBUSY,
SEGMAXAVAILMB,
SEGINUSEMB,
SEGCACHEMB,
SEGMDLALLOC,
SEGMDLFREE,
SEGMDLRELEASE,
SEGMDLRECYCLE,
SEGMDLALLOCKB,
SEGMDLFREEKB,
SEGMDLRELEASEKB,
SEGMDLRECYCLEKB,
RTCPUTIME,
RTTASKSMAX,
SPAREINT
FROM dbc.resusagespma
where cast((thedate (format 'Y4-MM-DDB'))||(thetime (format '99:99:99.99')) as timestamp(2)) >= timestamp '2020-07-01 00:00:00'
  and cast((thedate(format 'Y4-MM-DDB'))||(thetime(format '99:99:99.99')) as timestamp(2)) < timestamp '2020-07-01 11:59:59'
and thedate between timestamp '2020-07-01 00:00:00' and timestamp '2020-07-01 11:59:59'
;

-- Profile: dbc_customer_level1. Database Version: 1620. Template: dbc_resusagesvdsk.
locking row for access
SELECT THEDATE,
NODEID,
THETIME,
GMTTIME,
CABINETID,
MODULEID,
NODETYPE,
THETIMESTAMP,
CENTISECS,
SECS,
NOMINALSECS,
SUMMARYFLAG,
RESERVED,
PM_COD_CPU,
PM_COD_IO,
WM_COD_CPU,
WM_COD_IO,
TIER_FACTOR,
VPRID,
READKB,
WRITEKB,
READRESPTOT,
WRITERESPTOT,
READRESPSQ,
WRITERESPSQ,
EXTMIGRATEREADRESPTOT,
EXTMIGRATEWRITERESPTOT,
EXTMIGRATEIOTIMEIMPROVE,
SPARE00,
SPARE01,
SPARE02,
SPARE03,
SPARE04,
SPARE05,
SPARE06,
SPARE07,
SPARE08,
SPARE09,
SPARE10,
SPARE11,
SPARE12,
SPARE13,
SPARE14,
SPARE15,
SPARE16,
SPARE17,
SPARE18,
SPARE19,
ACTIVE,
READCNT,
WRITECNT,
READRESPMAX,
WRITERESPMAX,
CONCURRENTMAX,
CONCURRENTREADMAX,
CONCURRENTWRITEMAX,
OUTREQTIME,
EXTALLOCHOT,
EXTALLOCWARM,
EXTALLOCTOTAL,
EXTALLOCNONPACING,
EXTALLOCSYSTEMPACING,
EXTALLOCSTATIC,
EXTMIGRATEFASTER,
EXTMIGRATETOTAL,
EXTMIGRATEIOTIMECOST,
EXTMIGRATEIOTIMEBENEFIT,
SPAREINT
FROM dbc.resusagesvdsk
where cast((thedate (format 'Y4-MM-DDB'))||(thetime (format '99:99:99.99')) as timestamp(2)) >= timestamp '2020-07-01 00:00:00'
  and cast((thedate(format 'Y4-MM-DDB'))||(thetime(format '99:99:99.99')) as timestamp(2)) < timestamp '2020-07-01 11:59:59'
and thedate between timestamp '2020-07-01 00:00:00' and timestamp '2020-07-01 11:59:59'
;

-- Profile: dbc_customer_level1. Database Version: 1620. Template: dbc_resusagesvpr.
locking row for access
SELECT THEDATE,
NODEID,
THETIME,
GMTTIME,
CABINETID,
MODULEID,
NODETYPE,
THETIMESTAMP,
CENTISECS,
SECS,
NOMINALSECS,
SUMMARYFLAG,
RESERVED,
PM_COD_CPU,
WM_COD_CPU,
NCPUS,
VPRID,
VPRTYPE,
MEMPDBKBRESCU,
MEMPCIKBRESCU,
MEMSDBKBRESCU,
MEMSCIKBRESCU,
MEMTJTKBRESCU,
MEMAPTKBRESCU,
MEMPDBKBRESDU,
MEMPCIKBRESDU,
MEMSDBKBRESDU,
MEMSCIKBRESDU,
MEMTJTKBRESDU,
MEMAPTKBRESDU,
MEMPDBKBRESCA,
MEMPCIKBRESCA,
MEMSDBKBRESCA,
MEMSCIKBRESCA,
MEMTJTKBRESCA,
MEMAPTKBRESCA,
MEMPDBKBRESDA,
MEMPCIKBRESDA,
MEMSDBKBRESDA,
MEMSCIKBRESDA,
MEMTJTKBRESDA,
MEMAPTKBRESDA,
MEMCTXTACCESSKB,
MEMCTXTDEACCESSKB,
MEMCTXTDESTROYKB,
NETPTPREADKB,
NETPTPWRITEKB,
NETBRDREADKB,
NETBRDWRITEKB,
FILEPDBACQKB,
FILEPCIACQKB,
FILESDBACQKB,
FILESCIACQKB,
FILETJTACQKB,
FILEAPTACQKB,
FILEPDBACQOTHERKB,
FILEPCIACQOTHERKB,
FILESDBACQOTHERKB,
FILESCIACQOTHERKB,
FILETJTACQOTHERKB,
FILEAPTACQOTHERKB,
FILEPDBRELOTHERKB,
FILEPCIRELOTHERKB,
FILESDBRELOTHERKB,
FILESCIRELOTHERKB,
FILETJTRELOTHERKB,
FILEAPTRELOTHERKB,
FILEPDBACQREADKB,
FILEPCIACQREADKB,
FILESDBACQREADKB,
FILESCIACQREADKB,
FILETJTACQREADKB,
FILEAPTACQREADKB,
FILEPDBPRESKB,
FILEPCIPRESKB,
FILESDBPRESKB,
FILESCIPRESKB,
FILETJTPRESKB,
FILEAPTPRESKB,
FILEPDBPREREADKB,
FILEPCIPREREADKB,
FILESDBPREREADKB,
FILESCIPREREADKB,
FILETJTPREREADKB,
FILEAPTPREREADKB,
FILEPDBDYRRELKB,
FILEPCIDYRRELKB,
FILESDBDYRRELKB,
FILESCIDYRRELKB,
FILETJTDYRRELKB,
FILEAPTDYRRELKB,
FILEPDBFWRITEKB,
FILEPCIFWRITEKB,
FILESDBFWRITEKB,
FILESCIFWRITEKB,
FILETJTFWRITEKB,
FILEAPTFWRITEKB,
FILEPDBDYAWRITEKB,
FILEPCIDYAWRITEKB,
FILESDBDYAWRITEKB,
FILESCIDYAWRITEKB,
FILETJTDYAWRITEKB,
FILEAPTDYAWRITEKB,
FILEPDBCNRRELKB,
FILEPCICNRRELKB,
FILESDBCNRRELKB,
FILESCICNRRELKB,
FILETJTCNRRELKB,
FILEAPTCNRRELKB,
FILEPDBFDRPKB,
FILEPCIFDRPKB,
FILESDBFDRPKB,
FILESCIFDRPKB,
FILETJTFDRPKB,
FILEAPTFDRPKB,
FILEPDBCNADRPKB,
FILEPCICNADRPKB,
FILESDBCNADRPKB,
FILESCICNADRPKB,
FILETJTCNADRPKB,
FILEAPTCNADRPKB,
READRESPONSEHOTTOTAL,
READRESPONSEWARMTOTAL,
READRESPONSECOLDTOTAL,
WRITERESPONSEHOTTOTAL,
WRITERESPONSEWARMTOTAL,
WRITERESPONSECOLDTOTAL,
FILEPRECOMPMB,
FILEPOSTCOMPMB,
FILEPREUNCOMPMB,
FILEPOSTUNCOMPMB,
FILECOMPCPU,
FILEUNCOMPCPU,
FILETEMPCPU,
VHAGEDOUT,
VHAGEDOUTKB,
VHLOGICALDBREAD,
VHLOGICALDBREADKB,
VHPHYSICALDBREAD,
VHPHYSICALDBREADKB,
VHCACHEINUSEKB,
FSGCACHEINUSEKB,
SPACEALLOCATED,
SPACEDEALLOCATED,
SPARE00,
SPARE01,
SPARE02,
SPARE03,
SPARE04,
SPARE05,
SPARE06,
SPARE07,
SPARE08,
SPARE09,
SPARE10,
SPARE11,
SPARE12,
SPARE13,
SPARE14,
SPARE15,
SPARE16,
SPARE17,
SPARE18,
SPARE19,
SPARE20,
SPARE21,
SPARE22,
SPARE23,
SPARE24,
SPARE25,
SPARE26,
SPARE27,
SPARE28,
SPARE29,
ACTIVE,
PROCPENDDBLOCK,
PROCBLKSDBLOCK,
PROCWAITDBLOCK,
MEMCTXTALLOCS,
MEMCTXTACCESSES,
MEMCTXTDEACCESSES,
MEMCTXTDESTROYS,
NETPTPREADS,
NETPTPWRITES,
NETBRDREADS,
NETBRDWRITES,
DBLOCKENTERS,
DBLOCKBLOCKS,
DBLOCKDEADLOCKS,
FILEPDBACQS,
FILEPCIACQS,
FILESDBACQS,
FILESCIACQS,
FILETJTACQS,
FILEAPTACQS,
FILEPDBACQSOTHER,
FILEPCIACQSOTHER,
FILESDBACQSOTHER,
FILESCIACQSOTHER,
FILETJTACQSOTHER,
FILEAPTACQSOTHER,
FILEPDBRELSOTHER,
FILEPCIRELSOTHER,
FILESDBRELSOTHER,
FILESCIRELSOTHER,
FILETJTRELSOTHER,
FILEAPTRELSOTHER,
FILEPDBACQREADS,
FILEPCIACQREADS,
FILESDBACQREADS,
FILESCIACQREADS,
FILETJTACQREADS,
FILEAPTACQREADS,
FILEPDBPRES,
FILEPCIPRES,
FILESDBPRES,
FILESCIPRES,
FILETJTPRES,
FILEAPTPRES,
FILEPDBPREREADS,
FILEPCIPREREADS,
FILESDBPREREADS,
FILESCIPREREADS,
FILETJTPREREADS,
FILEAPTPREREADS,
FILEPDBDYRRELS,
FILEPCIDYRRELS,
FILESDBDYRRELS,
FILESCIDYRRELS,
FILETJTDYRRELS,
FILEAPTDYRRELS,
FILEPDBFWRITES,
FILEPCIFWRITES,
FILESDBFWRITES,
FILESCIFWRITES,
FILETJTFWRITES,
FILEAPTFWRITES,
FILEPDBDYAWRITES,
FILEPCIDYAWRITES,
FILESDBDYAWRITES,
FILESCIDYAWRITES,
FILETJTDYAWRITES,
FILEAPTDYAWRITES,
FILEPDBCNRRELS,
FILEPCICNRRELS,
FILESDBCNRRELS,
FILESCICNRRELS,
FILETJTCNRRELS,
FILEAPTCNRRELS,
FILEPDBFDRPS,
FILEPCIFDRPS,
FILESDBFDRPS,
FILESCIFDRPS,
FILETJTFDRPS,
FILEAPTFDRPS,
FILEPDBCNADRPS,
FILEPCICNADRPS,
FILESDBCNADRPS,
FILESCICNADRPS,
FILETJTCNADRPS,
FILEAPTCNADRPS,
FILELOCKENTERS,
FILELOCKBLOCKS,
FILELOCKDEADLOCKS,
FILECYLMIGRS,
FILECYLALLOCS,
FILECYLFREES,
FILEMCYLPACKS,
FILECYLDEFRAGS,
FILEWCYLALLOCS,
FILEWCYLFREES,
FILEFCRREQUESTS,
FILEFCRREQUESTSADAPTIVE,
FILEFCRDENIEDUSER,
FILEFCRDENIEDCACHE,
FILEFCRDENIEDTHRESHUSER,
FILEFCRBLOCKSREAD,
FILEFCRBLOCKSDENIEDUSER,
FILEFCRBLOCKSDENIEDCACHE,
FILEFCRBLOCKSDENIEDTHRESHUSER,
FILEFCRDENIEDKERN,
FILEFCRDENIEDTHRESHKERN,
FILEFCRBLOCKSDENIEDKERN,
FILEFCRBLOCKSDENIEDTHRESHKERN,
FILESYNCSCANS,
FILESYNCSUBTABLES,
FILESYNCSCANNERS,
FILESYNCGROUPS,
MSGWORKQLENMAX,
MSGCHNLASTDONE,
MSGWORKQLEN,
CPUUSERVPART00,
CPUUSERVPART01,
CPUUSERVPART02,
CPUUSERVPART03,
CPUUSERVPART04,
CPUUSERVPART05,
CPUUSERVPART06,
CPUUSERVPART07,
CPUUSERVPART08,
CPUUSERVPART09,
CPUUSERVPART10,
CPUUSERVPART11,
CPUUSERVPART12,
CPUUSERVPART13,
CPUUSERVPART14,
CPUUSERVPART15,
CPUUSERVPART16,
CPUUSERVPART17,
CPUUSERVPART18,
CPUUSERVPART19,
CPUUSERVPART20,
CPUUSERVPART21,
CPUUSERVPART22,
CPUUSERVPART23,
CPUUSERVPART24,
CPUUSERVPART25,
CPUUSERVPART26,
CPUUSERVPART27,
CPUUSERVPART28,
CPUUSERVPART29,
CPUUSERVPART30,
CPUUSERVPART31,
CPUUSERVPART32,
CPUUSERVPART33,
CPUUSERVPART34,
CPUUSERVPART35,
CPUUSERVPART36,
CPUUSERVPART37,
CPUUSERVPART38,
CPUUSERVPART39,
CPUUSERVPART40,
CPUUSERVPART41,
CPUUSERVPART42,
CPUUSERVPART43,
CPUUSERVPART44,
CPUUSERVPART45,
CPUUSERVPART46,
CPUUSERVPART47,
CPUUEXECPART00,
CPUUEXECPART01,
CPUUEXECPART02,
CPUUEXECPART03,
CPUUEXECPART04,
CPUUEXECPART05,
CPUUEXECPART06,
CPUUEXECPART07,
CPUUEXECPART08,
CPUUEXECPART09,
CPUUEXECPART10,
CPUUEXECPART11,
CPUUEXECPART12,
CPUUEXECPART13,
CPUUEXECPART14,
CPUUEXECPART15,
CPUUEXECPART16,
CPUUEXECPART17,
CPUUEXECPART18,
CPUUEXECPART19,
CPUUEXECPART20,
CPUUEXECPART21,
CPUUEXECPART22,
CPUUEXECPART23,
CPUUEXECPART24,
CPUUEXECPART25,
CPUUEXECPART26,
CPUUEXECPART27,
CPUUEXECPART28,
CPUUEXECPART29,
CPUUEXECPART30,
CPUUEXECPART31,
CPUUEXECPART32,
CPUUEXECPART33,
CPUUEXECPART34,
CPUUEXECPART35,
CPUUEXECPART36,
CPUUEXECPART37,
CPUUEXECPART38,
CPUUEXECPART39,
CPUUEXECPART40,
CPUUEXECPART41,
CPUUEXECPART42,
CPUUEXECPART43,
CPUUEXECPART44,
CPUUEXECPART45,
CPUUEXECPART46,
CPUUEXECPART47,
ALLOCATOREXTENTALLOCREQS,
ALLOCATOREXTENTFREEREQS,
ALLOCATORMAPIOSSTARTED,
ALLOCATORMAPIOSDONE,
NODEAGENTMIGRATIONSSTARTED,
NODEAGENTMIGRATIONSDONE,
NODEAGENTSTATPROCESSED,
READSHOT,
READSWARM,
READSCOLD,
WRITESHOT,
WRITESWARM,
WRITESCOLD,
READRESPONSEHOTMAX,
READRESPONSEWARMMAX,
READRESPONSECOLDMAX,
WRITERESPONSEHOTMAX,
WRITERESPONSEWARMMAX,
WRITERESPONSECOLDMAX,
READRESPONSEHOTMIN,
READRESPONSEWARMMIN,
READRESPONSECOLDMIN,
WRITERESPONSEHOTMIN,
WRITERESPONSEWARMMIN,
WRITERESPONSECOLDMIN,
IORESPMAX,
MIWRITELOCKS,
MIWRITELOCKTIME,
MIWRITELOCKTIMEMAX,
MISLEEPS,
MISLEEPTIME,
MISLEEPTIMEMAX,
DBMERGETRIED,
DBMERGEDONE,
DBMERGEELIM,
DBMERGEEXTRAIO,
FILEACPCYLSSKIPPED,
FILEACPCYLSMIGR,
FILEACPCYLSUNFSEONLY,
FILEACPCYLSPOSTPONED,
FILECOMPDBS,
FILEUNCOMPDBS,
FILECOMPFERRETDBS,
FILEUNCOMPFERRETDBS,
FILECOMPTEMPDBS,
FILEUNCOMPTEMPDBS,
FILECOMPCYLMIGRS,
FILEUNCOMPCYLMIGRS,
FSGCACHEWAITS,
FSGCACHEWAITTIME,
FSGCACHEWAITTIMEMAX,
UDFSERV,
UDFEXEC,
FILESORTS,
FILELARGEMEMSORTS,
FILELARGEMEMSORTSDENIED,
FILEWALBUFBUSY,
FILEWALSIZE,
SPACEPROACTIVEALLOCS,
SPACEGROUPALLOCS,
SPACEMSGSCNT,
FILECOMPDBS_HW,
FILEUNCOMPDBS_HW,
SPAREINT
FROM dbc.resusagesvpr
where cast((thedate (format 'Y4-MM-DDB'))||(thetime (format '99:99:99.99')) as timestamp(2)) >= timestamp '2020-07-01 00:00:00'
  and cast((thedate(format 'Y4-MM-DDB'))||(thetime(format '99:99:99.99')) as timestamp(2)) < timestamp '2020-07-01 11:59:59'
  and thedate between timestamp '2020-07-01 00:00:00' and timestamp '2020-07-01 11:59:59'
;

-- Profile: dbc_customer_level1. Database Version: 1620. Template: dbc_resusagesps.
locking row for access
SELECT THEDATE,
NODEID,
THETIME,
GMTTIME,
CABINETID,
MODULEID,
NODETYPE,
THETIMESTAMP,
CENTISECS,
SECS,
NOMINALSECS,
PM_COD_CPU,
PM_COD_IO,
WM_COD_CPU,
WM_COD_IO,
TIER_FACTOR,
NCPUS,
AMPCOUNT,
ROWINDEX1,
VPRTYPE,
PPID,
RESERVED,
QWAITTIME,
SERVICETIME,
WORKTIMEINUSE,
MEMALLOCKB,
FILEPDBACQKB,
FILEPCIACQKB,
FILESDBACQKB,
FILESCIACQKB,
FILETJTACQKB,
FILEAPTACQKB,
FILEPDBACQREADKB,
FILEPCIACQREADKB,
FILESDBACQREADKB,
FILESCIACQREADKB,
FILETJTACQREADKB,
FILEAPTACQREADKB,
FILEPDBPRESKB,
FILEPCIPRESKB,
FILESDBPRESKB,
FILESCIPRESKB,
FILETJTPRESKB,
FILEAPTPRESKB,
FILEPDBPREREADKB,
FILEPCIPREREADKB,
FILESDBPREREADKB,
FILESCIPREREADKB,
FILETJTPREREADKB,
FILEAPTPREREADKB,
FILEPDBDYRRELKB,
FILEPCIDYRRELKB,
FILESDBDYRRELKB,
FILESCIDYRRELKB,
FILETJTDYRRELKB,
FILEAPTDYRRELKB,
FILEPDBFWRITEKB,
FILEPCIFWRITEKB,
FILESDBFWRITEKB,
FILESCIFWRITEKB,
FILETJTFWRITEKB,
FILEAPTFWRITEKB,
NETPTPREADKB,
NETPTPWRITEKB,
PROCBLKSTIME,
PROCWAITTIME,
PROCWAITMISC,
WAITIO,
CPURUNDELAY,
IOSUBMITTEDKB,
IOCOMPLETEDKB,
IOCRITICALSUBMITTEDKB,
FULLPOTENTIALIOTA,
CODPOTENTIALIOTA,
USEDIOTA,
IOTHROTTLECOUNT,
CPUVPTHROTTLECOUNT,
CPUVPTHROTTLETIME,
CPUTHROTTLECOUNT,
CPUTHROTTLETIME,
VHLOGICALDBREAD,
VHLOGICALDBREADKB,
VHPHYSICALDBREAD,
VHPHYSICALDBREADKB,
SPARE00,
SPARE01,
SPARE02,
SPARE03,
SPARE04,
SPARE05,
SPARE06,
SPARE07,
SPARE08,
SPARE09,
SPARE10,
SPARE11,
SPARE12,
SPARE13,
SPARE14,
SPARE15,
SPARE16,
SPARE17,
SPARE18,
SPARE19,
ACTIVE,
'' AS AGNAME,
VPID,
'' AS VPNAME,
WDID,
'' AS WDNAME,
NUMTASKS,
ACTIVESESSIONS,
NUMREQUESTS,
QWAITTIMEMAX,
SERVICETIMEMAX,
WORKMSGSENDDELAY,
WORKMSGSENDDELAYMAX,
WORKMSGRECEIVEDELAY,
WORKMSGRECEIVEDELAYMAX,
WORKTIMEINUSEMAX,
AWTRELEASES,
WORKMSGSENDDELAYCNT,
WORKMSGRECEIVEDELAYCNT,
CPUUSERV,
CPUUEXEC,
CPUUSERVOTHER,
CPUUEXECOTHER,
MEMALLOCS,
WORKTYPEINUSE00,
WORKTYPEINUSE01,
WORKTYPEINUSE02,
WORKTYPEINUSE03,
WORKTYPEINUSE04,
WORKTYPEINUSE05,
WORKTYPEINUSE06,
WORKTYPEINUSE07,
WORKTYPEINUSE08,
WORKTYPEINUSE09,
WORKTYPEINUSE10,
WORKTYPEINUSE11,
WORKTYPEINUSE12,
WORKTYPEINUSE13,
WORKTYPEINUSE14,
WORKTYPEINUSE15,
WORKTYPEMAX00,
WORKTYPEMAX01,
WORKTYPEMAX02,
WORKTYPEMAX03,
WORKTYPEMAX04,
WORKTYPEMAX05,
WORKTYPEMAX06,
WORKTYPEMAX07,
WORKTYPEMAX08,
WORKTYPEMAX09,
WORKTYPEMAX10,
WORKTYPEMAX11,
WORKTYPEMAX12,
WORKTYPEMAX13,
WORKTYPEMAX14,
WORKTYPEMAX15,
FILEPDBACQS,
FILEPCIACQS,
FILESDBACQS,
FILESCIACQS,
FILETJTACQS,
FILEAPTACQS,
FILEPDBACQREADS,
FILEPCIACQREADS,
FILESDBACQREADS,
FILESCIACQREADS,
FILETJTACQREADS,
FILEAPTACQREADS,
FILEPDBPRES,
FILEPCIPRES,
FILESDBPRES,
FILESCIPRES,
FILETJTPRES,
FILEAPTPRES,
FILEPDBPREREADS,
FILEPCIPREREADS,
FILESDBPREREADS,
FILESCIPREREADS,
FILETJTPREREADS,
FILEAPTPREREADS,
FILEPDBDYRRELS,
FILEPCIDYRRELS,
FILESDBDYRRELS,
FILESCIDYRRELS,
FILETJTDYRRELS,
FILEAPTDYRRELS,
FILEPDBFWRITES,
FILEPCIFWRITES,
FILESDBFWRITES,
FILESCIFWRITES,
FILETJTFWRITES,
FILEAPTFWRITES,
NETPTPREADS,
NETPTPWRITES,
NETBRDREADS,
NETBRDWRITES,
PROCBLKSSEGNOVIRTUAL,
PROCBLKSFSGNIOS,
PROCBLKSSEGMDL,
PROCBLKSMONRESUME,
PROCBLKSNETTHROTTLE,
PROCBLKSQNL,
PROCBLKSFSGREAD,
PROCBLKSFSGWRITE,
PROCBLKSDBLOCK,
PROCBLKSMONITOR,
PROCBLKSSEGLOCK,
PROCBLKSFSGLOCK,
PROCBLKSFLOWCONTROL,
PROCBLKSMISC,
PROCWAITSEGNOVIRTUAL,
PROCWAITFSGNIOS,
PROCWAITSEGMDL,
PROCWAITMONRESUME,
PROCWAITNETTHROTTLE,
PROCWAITQNL,
PROCWAITFSGREAD,
PROCWAITFSGWRITE,
PROCWAITDBLOCK,
PROCWAITMONITOR,
PROCWAITSEGLOCK,
PROCWAITFSGLOCK,
PROCWAITFLOWCONTROL,
IOSUBMITTED,
IOCOMPLETED,
IOCRITICALSUBMITTED,
DECAYLEVEL1IO,
DECAYLEVEL2IO,
DECAYLEVEL1CPU,
DECAYLEVEL2CPU,
TACTICALEXCEPTIONIO,
TACTICALEXCEPTIONCPU,
RTBOOSTCOUNT,
RTCPUTIME,
RTTASKSMAX,
WORKTYPEAWTEXHAUSTED00,
WORKTYPEAWTEXHAUSTED01,
WORKTYPEAWTEXHAUSTED02,
WORKTYPEAWTEXHAUSTED03,
WORKTYPEAWTEXHAUSTED04,
WORKTYPEAWTEXHAUSTED05,
WORKTYPEAWTEXHAUSTED06,
WORKTYPEAWTEXHAUSTED07,
WORKTYPEAWTEXHAUSTED08,
WORKTYPEAWTEXHAUSTED09,
WORKTYPEAWTEXHAUSTED10,
WORKTYPEAWTEXHAUSTED11,
WORKTYPEAWTEXHAUSTED12,
WORKTYPEAWTEXHAUSTED13,
WORKTYPEAWTEXHAUSTED14,
WORKTYPEAWTEXHAUSTED15,
SPAREINT
FROM dbc.resusagesps
where cast((thedate (format 'Y4-MM-DDB'))||(thetime (format '99:99:99.99')) as timestamp(2)) >= timestamp '2020-07-01 00:00:00'
  and cast((thedate(format 'Y4-MM-DDB'))||(thetime(format '99:99:99.99')) as timestamp(2)) < timestamp '2020-07-01 11:59:59'
  and thedate between timestamp '2020-07-01 00:00:00' and timestamp '2020-07-01 11:59:59'
;

-- Profile: dbc_customer_level1. Database Version: 1620. Template: dbc_dbcinfo.
locking row for access
SELECT CURRENT_TIMESTAMP AS THETIMESTAMP,
INFOKEY,
INFODATA
FROM dbc.dbcinfo
;

-- Profile: dbc_customer_level1. Database Version: 1620. Template: dbc_featureusage.
locking row for access
with dbql as (
select
cast(collecttimestamp as date) as collect_date
,extract(hour from collecttimestamp) as collect_hour
,featureusage
--simple metrics
,count(*) as cnt_query
,count(distinct username) as distinct_cnt_username
--consumption metrics
,sum(ParserCPUTime) as sum_parsercputime
,sum(ampcputime) as sum_ampcputime
,sum(totaliocount) as sum_totaliocount
,sum(ReqIOKB) as sum_reqiokb
,sum(ReqPhysIO) as sum_reqphysio
,sum(ReqPhysIOKB) as sum_reqphysiokb
,sum(usediota) as sum_usediota
--impact
,sum(case when maxampcputime = 0 then ampcputime else maxampcputime * numofactiveamps end)
as sum_impactcpu
,sum(case when maxampio = 0 then totaliocount else maxampio * numofactiveamps end) as
sum_impactio
--duration metrics
,(sum(LockDelay*100)) as sum_lockdelay
,(sum(DelayTime)) as sum_delaytime
,(sum(MinRespHoldTime)) as sum_minrespholdtime
,(sum(TotalFirstRespTime)) as sum_totalfirstresptime --delay+exec+minresp
--complexity metrics
,sum(case when abortflag = 'T' then 1 else 0 end) as cnt_abort_query
,sum(case when NumOfActiveAMPs = MaxNumMapAMPs and MaxNumMapAMPs > 0 then 1 else 0 end)
cnt_allmapamp_query
,avg(case when NumOfActiveAMPs = MaxNumMapAMPs and MaxNumMapAMPs > 0 then
AmpCpuTime/nullifzero(NumOfActiveAmps*MaxAmpCpuTime) else null end) as avg_allmapamp_pe
,sum(numsteps) as sum_numsteps
,sum(spoolusage) as sum_spoolusage
,sum(NumResultRows) as sum_numresultrows
from dbc.dbqlogtbl a
----
--the timelogic for this job floors to the hour
----
where collecttimestamp >= cast(cast(timestamp '2020-07-01 00:00:00' as date) as timestamp(0)) + cast(extract(hour from timestamp '2020-07-01 00:00:00') as interval hour)
  and collecttimestamp <= cast(cast(timestamp '2020-07-01 11:59:59' as date) as timestamp(0)) + cast(extract(hour from timestamp '2020-07-01 11:59:59') as interval hour)
group by 1,2,3
)
select
dbql.collect_date
,dbql.collect_hour
,case when min(feat.featurename) is null then cast('[]' as varchar(8172)) else
cast(json_agg(feat.featurename as f) as varchar(8172)) end as feature_list
,dbql.cnt_query
,dbql.distinct_cnt_username
,dbql.sum_parsercputime
,dbql.sum_ampcputime
,dbql.sum_totaliocount
,dbql.sum_reqiokb
,dbql.sum_reqphysio
,dbql.sum_reqphysiokb
,dbql.sum_usediota
,dbql.sum_impactcpu
,dbql.sum_impactio
,dbql.sum_lockdelay
,dbql.sum_delaytime
,dbql.sum_minrespholdtime
,dbql.sum_totalfirstresptime
,dbql.cnt_abort_query
,dbql.cnt_allmapamp_query
,dbql.avg_allmapamp_pe
,dbql.sum_numsteps
,dbql.sum_spoolusage
,dbql.sum_numresultrows
from dbql
left outer join dbc.qrylogfeaturelistv feat
on bytes(dbql.featureusage) = 256 and getbit(dbql.featureusage,(2047-feat.featurebitpos)) = 1
group by 1,2,featureusage,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24;
